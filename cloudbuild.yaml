steps:
  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}",
        "."
      ]
    id: "Build Docker Image"

  # Step 2: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}"
      ]
    id: "Push Docker Image"

  # Step 3: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "${_APP_NAME}",
        "--image",
        "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}",
        "--region",
        "${_REGION}",
        "--service-account",
        "${_CLOUD_RUN_SA}@${_PROJECT_ID}.iam.gserviceaccount.com",
        "--allow-unauthenticated",
        "--add-cloudsql-instances",
        "sky-root:us-central1:quickstart-instance",
        "--set-env-vars",
        "INSTANCE_UNIX_SOCKET=/cloudsql/sky-root:us-central1:quickstart-instance",
        "--set-env-vars",
        "INSTANCE_CONNECTION_NAME=sky-root:us-central1:quickstart-instance",
        "--set-env-vars",
        "DB_NAME=quickstart-db",
        "--set-env-vars",
        "DB_USER=quickstart-user",
        "--set-env-vars",
        "DB_PASS=${_DB_PASS}"
      ]
    id: "Deploy to Cloud Run"

substitutions:
  # _PROJECT_ID: "sky-root"  
  # _REGION: "us-central1"
  # _PROJECT_NUMBER: "262659146932"
  _ARTIFACT_REPO: "sky-art"
  _CLOUD_RUN_SA: "cloud-run-sa"
  _APP_NAME: "sky-flask-app"
  _DB_PASS: "userpassword"

timeout: "600s"

images:
  - "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}"

logsBucket: "gs://skydev-app-build-logs"
