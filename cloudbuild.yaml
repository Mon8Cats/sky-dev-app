
steps:
  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}",
        "."
      ]
    id: "Build Docker Image"

  # Step 2: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}"
      ]
    id: "Push Docker Image"

  # Step 3: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    secretEnv:
      - "DB_PASS"  # Use the secret DB_PASS from Secret Manager
    args:
      [
        "-c",
        "gcloud run deploy ${_APP_NAME} \
          --image ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA} \
          --region ${_REGION} \
          --service-account ${_CLOUD_RUN_SA}@${PROJECT_ID}.iam.gserviceaccount.com \
          --allow-unauthenticated \
          --add-cloudsql-instances sky-root:us-central1:quickstart-instance \
          --set-env-vars INSTANCE_UNIX_SOCKET=/cloudsql/sky-root:us-central1:quickstart-instance \
          --set-env-vars INSTANCE_CONNECTION_NAME=sky-root:us-central1:quickstart-instance \
          --set-env-vars DB_NAME=quickstart-db \
          --set-env-vars DB_USER=quickstart-user \
          --set-env-vars DB_PASS=$DB_PASS"
      ]
    id: "Deploy to Cloud Run"

availableSecrets:
  secretManager:
    - versionName: "projects/${PROJECT_ID}/secrets/db_password/versions/latest"
      env: "DB_PASS"  # Map the secret to the DB_PASS environment variable

substitutions:
  _REGION: "us-central1"
  _ARTIFACT_REPO: "sky-art"
  _CLOUD_RUN_SA: "cloud-run-sa"
  _APP_NAME: "sky-flask-app"

timeout: "600s"

images:
  - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:${SHORT_SHA}"

logsBucket: "gs://skydev-app-build-logs"
